name: CI/CD

on:
  push:
    tags: [v*]
    branches:
      - main
  pull_request:
    # By default, a workflow only runs when a pull_request event's activity type is opened,
    # synchronize, or reopened.
    types: [opened, synchronize, reopened, edited]
    branches:
      - main

permissions: read-all

jobs:
  check-auto-tagging-will-work:
    if: |
      github.event_name == 'pull_request' &&
      (! startsWith(github.ref, 'refs/tags') && ! startsWith(github.ref, 'refs/heads/main'))
    uses: climatepolicyradar/reusable-workflows/.github/workflows/check-auto-tagging-will-work.yml@v8

  code-quality:
    if: |
      ! cancelled() && always() &&
      (needs.check-auto-tagging-will-work.result == 'skipped' || needs.check-auto-tagging-will-work.result == 'success')
    needs:
      - check-auto-tagging-will-work
    permissions:
      # For trunk to post annotations
      checks: write
      # For repo checkout
      contents: read
    uses: climatepolicyradar/reusable-workflows/.github/workflows/node-precommit-validator.yml@v8
    with:
      node-version: 20.11.0
      package-manager: yarn

  test:
    if: |
      ! cancelled() && always() &&
      (needs.check-auto-tagging-will-work.result == 'skipped' || needs.check-auto-tagging-will-work.result == 'success')
    needs:
      - check-auto-tagging-will-work
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20.11.0
        uses: actions/setup-node@v3
        with:
          node-version: 20.11.0
          cache: yarn

      - name: Install dev dependencies
        run: yarn install --production=false

      - name: Run Tests
        run: yarn test

  build:
    if: |
      ! cancelled() && always() &&
      (needs.code-quality.result == 'success' && needs.test.result == 'success') &&
      ! startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs:
      - code-quality
      - test
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: make build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag latest SHA and push to ECR
        id: retag_and_push_to_ecr
        uses: climatepolicyradar/retag-and-push-to-ecr@v1
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          repo-name: navigator-admin-frontend
          semver-tag: latest

  manual-semver:
    if: ${{ ! cancelled() && always() && startsWith(github.ref, 'refs/tags') }}
    uses: climatepolicyradar/reusable-workflows/.github/workflows/semver.yml@v8
    secrets: inherit
    with:
      repo-name: navigator-admin-frontend
      semver-tag: main-${GITHUB_SHA::8}
      manual-semver: true

  semver:
    if: ${{ github.ref == 'refs/heads/main' && ! cancelled() && always() && (needs.build.result == 'success')}}
    needs:
      - build
    permissions:
      contents: write
    uses: climatepolicyradar/reusable-workflows/.github/workflows/semver.yml@v8
    with:
      repo-name: navigator-admin-frontend
      semver-tag: main-${GITHUB_SHA::8}
      manual-semver: false
    secrets: inherit

  git:
    if: ${{ ! cancelled() && always() && (needs.semver.result == 'success')}}
    needs: semver
    permissions:
      contents: write
    uses: climatepolicyradar/reusable-workflows/.github/workflows/git.yml@v8
    secrets: inherit
