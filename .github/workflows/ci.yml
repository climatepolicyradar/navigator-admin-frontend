name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.11.0
          cache: yarn

      - name: Install dev dependencies
        run: yarn install --production=false

      - name: Run markdown linter
        shell: bash
        run: |
          if yarn markdownlint; then
            echo "No issues in markdown files."
          else
              exit 1
          fi

      - name: Run ESLint
        shell: bash
        run: yarn lint

      - name: Check formatting
        shell: bash
        run: |
          yarn global add prettier
          ls -a
          yarn validate-formatting

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn

      - name: Install dev dependencies
        run: yarn install --production=false

      - name: Run Tests
        run: yarn test

  build:
    runs-on: ubuntu-latest
    needs:
      - code-quality
      - test
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: make build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.1

      - name: Push Images to ECR
        run: |
          .github/retag-and-push.sh navigator-admin-frontend latest
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
