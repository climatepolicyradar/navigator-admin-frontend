name: Merge to main
on:
  push:
    branches:
      - main

# trunk-ignore(checkov/CKV2_GHA_1)
permissions: write-all
jobs:
  code-quality:
    if: |
      ! cancelled() && always()
    permissions:
      # For trunk to post annotations
      checks: write
      # For repo checkout
      contents: read
    uses: climatepolicyradar/reusable-workflows/.github/workflows/node-precommit-validator.yml@v5
    with:
      node-version: 20.11.0
      package-manager: yarn

  test:
    if: |
      ! cancelled() && always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 20.11.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.0
          cache: yarn

      - name: Install dev dependencies
        run: yarn install --production=false

      - name: Run Tests
        run: yarn test

  release:
    runs-on: ubuntu-latest
    needs: [code-quality, test]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.12.0

      # build
      - run: make build

      # release
      # most of this is taken from
      # https://docs.github.com/en/actions/use-cases-and-examples/deploying/deploying-to-amazon-elastic-container-service#creating-the-workflow
      - name: Configure AWS credentials (staging)
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID_STAGING }}:role/navigator-admin-frontend-github-actions
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-west-1

      - name: Login to Amazon ECR (staging)
        id: login-ecr-staging
        uses: aws-actions/amazon-ecr-login@d63b14614fe5d7fc5e5e52c523dea4e876816cc4

      - name: Build, tag, and push image to Amazon ECR (staging)
        id: build-image-staging
        env:
          ECR_REGISTRY: ${{ secrets.DOCKER_REGISTRY_STAGING }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: eu-west-1
          ECR_REPOSITORY: navigator-admin-frontend
        run: |
          docker tag navigator-admin-frontend $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Configure aws credentials (production)
        uses: aws-actions/configure-aws-credentials@v4.2.1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID_PROD }}:role/navigator-admin-frontend-github-actions
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-west-1

      - name: Login to Amazon ECR (production)
        id: login-ecr-prod
        uses: aws-actions/amazon-ecr-login@d63b14614fe5d7fc5e5e52c523dea4e876816cc4

      - name: Build, tag, and push image to Amazon ECR (production)
        id: build-image-prod
        env:
          ECR_REGISTRY: ${{ secrets.DOCKER_REGISTRY_PROD }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: eu-west-1
          ECR_REPOSITORY: navigator-admin-frontend
        run: |
          docker tag navigator-admin-frontend $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
